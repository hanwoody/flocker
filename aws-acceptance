#!/usr/bin/env python
import sys
import os
import subprocess
import time
from fabric.api import sudo, execute, env
from fabric.network import disconnect_all

from aws import create_node, driver

ZFS_REPO = ("https://s3.amazonaws.com/archive.zfsonlinux.org/"
            "fedora/zfs-release$(rpm -E %dist).noarch.rpm")
CLUSTERHQ_REPO = ("https://storage.googleapis.com/archive.clusterhq.com/"
                  "fedora/clusterhq-release$(rpm -E %dist).noarch.rpm")

## TODO: security groups


def install_1():
    sudo("yum install -y " + ZFS_REPO)
    sudo("yum install -y " + CLUSTERHQ_REPO)
    sudo("yum update -y")


def install_2():
    sudo("yum install -y kernel-devel-$(uname -r)")
    # sudo("yum reinstall spl-dkms zfs-dkms")
    sudo("yum install -y flocker-node")
    sudo("systemctl enable docker.service")
    sudo("systemctl start docker.service")
    sudo('mkdir /opt/flocker')
    sudo('truncate --size 1G /opt/flocker/pool-vdev')
    sudo('zpool create flocker /opt/flocker/pool-vdev')
    sudo('cp .ssh/authorized_keys /root/.ssh/')


def run_tests(addresses):
    environ = os.environ.copy()
    environ.update({
        "FLOCKER_ACCEPTANCE_NODES": ":".join(addresses),
    })
    sys.exit(subprocess.call(
        ['trial', 'flocker.acceptance'],
        env=environ))


def main():
    try:
        nodes = []
        for index in range(2):
            print "creating", index
            nodes.append(create_node(
                name="test-accept-%d" % (index,),
                base_ami="ami-cc8de6fc",
                username='fedora',
            ))

        print "Getting addresses"
        result = driver.wait_until_running(nodes)
        addresses = [address[0] for node, address in result]
        print addresses

        print "installing part 1"
        env.connection_attempts = 24
        env.timeout = 5
        env.pty = False
        execute(
            task=install_1,
            hosts=["fedora@" + address for address in addresses],
        )
        disconnect_all()

        for index, node in enumerate(nodes):
            print "Rebooting", index
            node.reboot()
        print "Sleeping for reboot."
        time.sleep(5)
        print "Waiting for nodes to start."
        driver.wait_until_running(nodes)

        print "installing part 2"
        execute(
            task=install_2,
            hosts=["fedora@" + address for address in addresses],
        )
        disconnect_all()

        print "running tests"
        run_tests(addresses)
    finally:
        for node in nodes:
            print "destroying", node
            node.destroy()

if __name__ == "__main__":
    main()
